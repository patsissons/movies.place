scalar BigInt
scalar Date
scalar DateTime

type Pong {
  timestamp: DateTime
}

type ImageConfiguration {
  baseUrl: String!
  secureBaseUrl: String!
  backdropSizes: [String!]!
  logoSizes: [String!]!
  posterSizes: [String!]!
  profileSizes: [String!]!
  stillSizes: [String!]!
}

type Configuration {
  images: ImageConfiguration
  changeKeys: [String!]!
}

type Collection {
  id: Int!
  name: String!
  overview: String
  posterPath: String
  backdropPath: String
}

type Genre {
  id: Int!
  name: String!
}

type ProductionCompany {
  id: Int!
  name: String!
  logoPath: String
  originCountry: String!
}

type ProductionCountry {
  iso31661: String!
  name: String!
}

type SpokenLanguage {
  iso6391: String!
  name: String!
}

type MovieCastCredit {
  id: Int!
  actor: Person!
  adult: Boolean!
  gender: Int
  knownForDepartment: String!
  name: String!
  originalName: String!
  popularity: Float!
  profilePath: String
  castId: Int!
  character: String!
  creditId: String!
  order: Int!
}

type ExternalMovieIds {
  id: Int
  imdbId: String
  facebookId: String
  instagramId: String
  twitterId: String
  wikidataId: String
}

type OMDBNumericalRatings {
  metascore: Int
  imdbRating: Float
  imdbVotes: Int
  rottenTomatoesScore: Int
}

type OMDBRating {
  source: String
  value: String
}

type OMDBMovie {
  id: ID!
  response: String!
  numericalRatings: OMDBNumericalRatings
  title: String
  year: String
  rated: String
  released: String
  runtime: String
  genre: String
  director: String
  writer: String
  actors: String
  plot: String
  language: String
  country: String
  awards: String
  poster: String
  ratings: [OMDBRating!]
  metascore: String
  imdbRating: String
  imdbVotes: String
  imdbId: String
  type: String
  dvd: String
  boxOffice: String
  production: String
  website: String
}

type Movie {
  id: Int!
  externalIds: ExternalMovieIds!
  omdb: OMDBMovie
  adult: Boolean!
  backdropPath: String
  belongsToCollection: Collection
  budget: BigInt!
  genres: [Genre!]!
  homepage: String
  imdbId: String
  originalLanguage: String!
  originalTitle: String!
  overview: String
  popularity: Float!
  posterPath: String
  productionCompanies: [ProductionCompany!]!
  productionCountries: [ProductionCountry!]!
  releaseDate: String
  revenue: BigInt!
  runtime: Int
  spokenLanguages: [SpokenLanguage!]!
  status: String!
  tagline: String
  title: String!
  video: Boolean!
  voteAverage: Float!
  voteCount: Int!
  cast: [MovieCastCredit!]!
}

type MovieListResult {
  id: Int!
  movie: Movie!
  posterPath: String
  adult: Boolean!
  overview: String!
  releaseDate: String
  genreIds: [Int!]!
  originalTitle: String!
  originalLanguage: String!
  title: String!
  backdropPath: String
  popularity: Float
  voteCount: Int!
  video: Boolean!
  voteAverage: Float!
}

type MovieListResultsPage {
  page: Int!
  totalPages: Int!
  totalResults: Int!
  results: [MovieListResult!]!
}

enum MovieSortType {
  LATEST
  NOW_PLAYING
  POPULAR
  TOP_RATED
  UPCOMING
}

type PersonCastCredit {
  id: Int!
  movie: Movie!
  character: String!
  creditId: String!
  releaseDate: String
  voteCount: Int!
  video: Boolean!
  adult: Boolean!
  voteAverage: Float!
  title: String!
  genreIds: [Int!]!
  originalLanguage: String!
  originalTitle: String!
  popularity: Float!
  backdropPath: String
  overview: String!
  posterPath: String
}

type ExternalPersonIds {
  id: Int
  imdbId: String
  facebookId: String
  freebaseMid: String
  freebaseId: String
  tvrageId: Int
  twitterId: String
  instagramId: String
  wikidataId: String
  tiktokId: String
  youtubeId: String
}

type Person {
  id: Int!
  externalIds: ExternalPersonIds!
  birthday: String
  knownForDepartment: String!
  deathday: String
  name: String!
  alsoKnownAs: [String!]!
  gender: Int!
  biography: String!
  popularity: Float!
  placeOfBirth: String
  profilePath: String
  adult: Boolean
  imdbId: String
  homepage: String
  cast: [PersonCastCredit!]!
}

type PersonListResult {
  id: Int!
  profilePath: String
  adult: Boolean!
  knownFor: [MovieListResult!]!
  knownForDepartment: String
  name: String!
  popularity: Float!
}

type PersonListResultsPage {
  page: Int!
  totalPages: Int!
  totalResults: Int!
  results: [PersonListResult!]!
}

enum PeopleSortType {
  POPULAR
}

type Query {
  configuration: Configuration!
  sortedMovies(
    sort: MovieSortType
    page: Int
    region: String
  ): MovieListResultsPage!
  movies(
    query: String!
    page: Int
    includeAdult: Boolean
    region: String
    year: Int
    primaryReleaseYear: Int
  ): MovieListResultsPage!
  movie(id: Int!): Movie
  sortedPeople(
    sort: PeopleSortType
    page: Int
    region: String
  ): PersonListResultsPage!
  people(
    query: String!
    page: Int
    includeAdult: Boolean
    region: String
  ): PersonListResultsPage!
  person(id: Int!): Person
  ping: Pong!
}
